trigger:
- master

resources:
- repo: self

variables:
  tag: 'azuredevops-$(Build.BuildNumber)'
  imageName: 'liamgu/container-scanning-demo'
  GITHUB_TOKEN: XXXX_CHANGE_ME_XXXX

stages:
- stage: Build
  displayName: Build, Scan and Push image
  jobs:
  - job: Build
    displayName: Build, Scan and Push
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'Docker hub'
        repository: '$(imageName)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)/src/'
        tags: '$(tag)'

  - task: CmdLine@2
    displayName: Trivy Image Scan
    inputs:
      script: |
        echo "##[group] Image Vulnerability Scan (LOW,MEDIUM)"
        docker run \
         --rm \
         -v /var/run/docker.sock:/var/run/docker.sock \
         -v $HOME/.cache/trivy:/root/.cache/ \
         -v $PWD:/work/ \
         --env GITHUB_TOKEN \
         aquasec/trivy \
         --light \
         --no-progress \
         --severity LOW,MEDIUM \
         --ignore-unfixed \
         --format template \
         --template "@contrib/junit.tpl" \
         -o /work/junit-report-low-med.xml \
         $(imageName):$(tag)
        echo "##[endgroup]"

        echo "##[group] Image Vulnerability Scan (HIGH,CRITICAL)"
        docker run \
         --rm \
         -v /var/run/docker.sock:/var/run/docker.sock \
         -v $HOME/.cache/trivy:/root/.cache/ \
         -v $PWD:/work/ \
         --env GITHUB_TOKEN \
         aquasec/trivy \
         --skip-update \
         --light \
         --no-progress \
         --severity HIGH,CRITICAL \
         --ignore-unfixed \
         --format template \
         --template "@contrib/junit.tpl" \
         -o /work/junit-report-high-crit.xml \
         $(imageName):$(tag)
        echo "##[endgroup]"

  - task: PublishTestResults@2
    displayName: Trivy - Low and Medium Vulnerabilities
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit-report-low-med.xml'
      mergeTestResults: true
      failTaskOnFailedTests: false
      testRunTitle: 'Trivy - Low and Medium Vulnerabilities'
    condition: 'always()'

  - task: PublishTestResults@2
    displayName: Trivy - High and Critical Vulnerabilities
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit-report-high-crit.xml'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'Trivy - High and Critical Vulnerabilities'
    condition: 'always()'

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker hub'
        repository: '$(imageName)'
        command: 'push'
        tags: '$(tag)'